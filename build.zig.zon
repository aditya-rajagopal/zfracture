.{
    .fingerprint = 0x83dd75e65d5ab678,
    .name = .fracture,
    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.1",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything
    // with this value.
    .minimum_zig_version = "0.14.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        .vulkan = .{
            .url = "https://github.com/Snektron/vulkan-zig/archive/dcd5388.tar.gz",
            .hash = "vulkan-0.0.0-r7Ytxy5bAwASnqFlLMD4V42z3LolS8n7xv3RlbXhAhv0",
        },
        .vulkan_headers = .{
            .url = "https://github.com/KhronosGroup/Vulkan-Headers/archive/v1.3.283.tar.gz",
            .hash = "1220a7e73d72a0d56bc2a65f9d8999a7c019e42260a0744c408d1cded111bc205e10",
        },
        .shader_compiler = .{
            .url = "https://github.com/Games-by-Mason/shader_compiler/archive/7f0c4c4.tar.gz",
            .hash = "shader_compiler-0.0.0-bOVsalpvAAATNIRMouquuDpg55A8Sqhg22EnX9kQ6Cl7",
        },
    },
    .paths = .{
        // This makes *all* files, recursively, included in this package. It is generally
        // better to explicitly list the files and directories instead, to insure that
        // fetching from tarballs, file system paths, and version control all result
        // in the same contents hash.
        "build.zig",
        "build.zig.zon",
        "src",
        "assets",
        "testbed",
        "LICENSE",
        "README.md",
    },
}
